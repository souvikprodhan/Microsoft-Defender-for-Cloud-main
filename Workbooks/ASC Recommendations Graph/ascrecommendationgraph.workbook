{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## ASC Recommendation Overview from Graph\n---\n\nThis workbook shows ASC Recommendation results from the Resource Graph"
      },
      "name": "text - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "5bb86d1c-e81a-4e65-a105-1bf63e495a75",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "description": "Select Subscription",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "89752a41-a363-48e7-8424-7e3e1159f9ad",
            "version": "KqlParameterItem/1.0",
            "name": "ASC_Assessment",
            "label": "ASC Assessment",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n | summarize by tostring(name)\r\n | sort by name asc",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "A maximum of 3 owners should be designated for your subscription",
              "A vulnerability assessment solution should be enabled on your virtual machines",
              "ASC Custom Recommendation -- Disk encryption should be applied on virtual machines",
              "Adaptive application controls for defining safe applications should be enabled on your machines",
              "Adaptive network hardening recommendations should be applied on internet facing virtual machines",
              "All network ports should be restricted on network security groups associated to your virtual machine",
              "Allowlist rules in your adaptive application control policy should be updated",
              "An Azure Active Directory administrator should be provisioned for SQL servers",
              "Apply-Diag-Settings-LA-Microsoft.Automation-automationAccounts",
              "Apply-Diag-Settings-LA-Microsoft.ContainerRegistry-registries",
              "Apply-Diag-Settings-LA-Microsoft.Devices-IotHubs",
              "Azure Defender for Kubernetes should be enabled",
              "Azure Defender for Key Vault should be enabled",
              "Azure Defender for DNS should be enabled",
              "Azure Defender for Azure SQL Database servers should be enabled",
              "Azure Defender for App Service should be enabled",
              "Azure DDoS Protection Standard should be enabled",
              "Azure Backup should be enabled for virtual machines",
              "Auto provisioning of the Log Analytics agent should be enabled on your subscription",
              "Authentication to Linux machines should require SSH keys"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "b4e8a3d4-982a-49d8-9b5e-aee446d99299",
            "version": "KqlParameterItem/1.0",
            "name": "Status",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n| summarize by status",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "89200af2-73d2-4f8a-9db3-e352eb5cf916",
            "version": "KqlParameterItem/1.0",
            "name": "Resource_Type",
            "label": "Resource Type",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n| summarize by ResourceType\r\n| where ResourceType startswith \"microsoft\"",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "microsoft.compute",
              "microsoft.storage",
              "microsoft.network",
              "microsoft.automation",
              "microsoft.operationalinsights",
              "microsoft.hybridcompute",
              "microsoft.sql",
              "microsoft.containerregistry",
              "microsoft.logic",
              "microsoft.keyvault",
              "microsoft.devices"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": " securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n| where name in ({ASC_Assessment})\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n| where ResourceType in ({Resource_Type})\r\n| where status in ({Status})\r\n| sort by description asc\r\n| summarize count() by status",
              "size": 1,
              "title": "Compliance Overview",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "sortBy": [],
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Unhealthy",
                    "color": "red"
                  },
                  {
                    "seriesName": "NotApplicable",
                    "color": "gray"
                  },
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "Overview-Donut"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": " securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n| where name in ({ASC_Assessment})\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n| where ResourceType in ({Resource_Type})\r\n| where status in ({Status})\r\n| sort by description asc\r\n| summarize Healthy=countif(status==\"Healthy\"), Unhealthy=countif(status==\"Unhealthy\"),  NotApplicable=countif(status==\"NotApplicable\") by Subsciption=subscriptionId\r\n| sort by Unhealthy\r\n\r\n",
              "size": 0,
              "title": "Compliance by Subscription",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subsciption",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true,
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "Healthy",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "green",
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Unhealthy",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "red",
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "NotApplicable",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "gray",
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ]
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "subscriptionId",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "70",
            "name": "Overview-Subscription"
          }
        ]
      },
      "name": "Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": " securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | extend name = properties.displayName\r\n| where name in ({ASC_Assessment})\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n| where ResourceType in ({Resource_Type})\r\n| where status in ({Status})\r\n| sort by description asc\r\n| summarize Healthy=countif(status==\"Healthy\"), Unhealthy=countif(status==\"Unhealthy\"),  NotApplicable=countif(status==\"NotApplicable\") by ResourceType\r\n\r\n",
        "size": 0,
        "title": "Compliance by Resource Type",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "barchart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subsciption",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "Healthy",
              "formatter": 8,
              "formatOptions": {
                "palette": "green",
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Unhealthy",
              "formatter": 8,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "NotApplicable",
              "formatter": 8,
              "formatOptions": {
                "palette": "gray",
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ]
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "subscriptionId",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "xAxis": "ResourceType",
          "yAxis": [
            "NotApplicable",
            "Unhealthy",
            "Healthy"
          ],
          "showLegend": true,
          "seriesLabelSettings": [
            {
              "seriesName": "NotApplicable",
              "color": "gray"
            },
            {
              "seriesName": "Unhealthy",
              "color": "red"
            },
            {
              "seriesName": "Healthy",
              "color": "green"
            }
          ]
        }
      },
      "name": "ResrourceType"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend name = properties.displayName\r\n    | where name in ({ASC_Assessment})\r\n    | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n    | where ResourceType in ({Resource_Type})\r\n    | where status in ({Status})\r\n     | summarize Unhealthy = countif(status == 'Unhealthy'), Healthy = countif(status == 'Healthy'), NotApplicable = countif(status == 'NotApplicable'), High = countif(severity == 'High'), Medium = countif(severity == 'Medium') , Low = countif(severity == 'Low') by ResourceType\r\n    | extend ParentID = 'root', Id = ResourceType, Type = 'ResourceType'\r\n| union (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend name = properties.displayName\r\n    | where name in ({ASC_Assessment})\r\n    | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName)\r\n    | where ResourceType in ({Resource_Type})\r\n    | where status in ({Status}) \r\n        | summarize  Unhealthy = countif(status == 'Unhealthy'), Healthy = countif(status == 'Healthy'), NotApplicable = countif(status == 'NotApplicable'), High = countif(severity == 'High'), Medium = countif(severity == 'Medium') , Low = countif(severity == 'Low') by subscriptionId, ResourceType\r\n    | project ParentID = ResourceType, Id = strcat(subscriptionId,\"-\",ResourceType) , Type = 'Subscription',  ResourceType, Subscription = subscriptionId, Unhealthy, Healthy, NotApplicable, High, Medium, Low\r\n)\r\n| sort by Unhealthy    \r\n",
        "size": 0,
        "title": "Resources by Type and Subscription",
        "exportedParameters": [
          {
            "fieldName": "Subscription",
            "parameterName": "filteredSubscription",
            "parameterType": 1
          },
          {
            "fieldName": "ResourceType",
            "parameterName": "filteredResourceType",
            "parameterType": 1
          }
        ],
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "35ch"
              }
            },
            {
              "columnMatch": "Unhealthy",
              "formatter": 8,
              "formatOptions": {
                "palette": "red"
              }
            },
            {
              "columnMatch": "Healthy",
              "formatter": 8,
              "formatOptions": {
                "palette": "green"
              }
            },
            {
              "columnMatch": "NotApplicable",
              "formatter": 8,
              "formatOptions": {
                "palette": "gray"
              }
            },
            {
              "columnMatch": "ParentID",
              "formatter": 5
            },
            {
              "columnMatch": "Id",
              "formatter": 5
            },
            {
              "columnMatch": "Type",
              "formatter": 5
            },
            {
              "columnMatch": "Subscription",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "30ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "20ch"
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentID",
            "treeType": 0,
            "expanderColumn": "ResourceType"
          }
        }
      },
      "name": "query - 2"
    },
    {
      "type": 1,
      "content": {
        "json": "## select a subscription to run query: \r\n### Selected Subscription: \"{filteredSubscription}\" and Resource Type: \"{filteredResourceType}\"",
        "style": "info"
      },
      "name": "TextBox"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend name = properties.displayName\r\n    | where name in ({ASC_Assessment})\r\n    | where subscriptionId in (\"{filteredSubscription}\")\r\n    | extend link = strcat(\"https://\", properties.links.azurePortal)\r\n    | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).metadata.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName), link\r\n    | where ResourceType in (\"{filteredResourceType}\")\r\n    | where status in ({Status})\r\n   ",
        "size": 0,
        "title": "Resource Details by Subscription",
        "showRefreshButton": true,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "32.5ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "ResourceType",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "turquoise",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "18ch"
              }
            },
            {
              "columnMatch": "status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Healthy",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Unhealthy",
                    "representation": "failed",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "NotApplicable",
                    "representation": "stopped",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "description",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "80ch"
              }
            },
            {
              "columnMatch": "link",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "filteredSubscription",
        "comparison": "isNotEqualTo"
      },
      "name": "SelectionDetails"
    }
  ],
  "fallbackResourceIds": [
    "Azure Security Center"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
