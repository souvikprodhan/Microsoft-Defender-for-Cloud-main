{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Remove-KeyVault-AccessPolicies-RBACPermissions",
            "type":  "string"
        }
    },
    "variables":  {
        "AscalertConnectionName":  "[concat('Ascalert-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path":  "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions":  {
                        "Condition_Check_Status_Code":  {
                            "actions":  {
                                "For_each_Key_Vault_Item":  {
                                    "foreach":  "@body('Parse_JSON_from_HTTP_Key_Vaults_List_by_Sub')?['value']",
                                    "actions":  {
                                        "For_each_Access_Policy_Item":  {
                                            "foreach":  "@items('For_each_Key_Vault_Item')?['properties']?['accessPolicies']",
                                            "actions":  {
                                                "Condition_Check_If_ObjectID_Equals_AttackerID":  {
                                                    "actions":  {
                                                        "HTTP_Key_Vaults_Update_Access_Policy_-_Remove":  {
                                                            "runAfter":  {
                                                                "Set_variable":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Http",
                                                            "inputs":  {
                                                                "authentication":  {
                                                                    "audience":  "https://management.azure.com ",
                                                                    "type":  "ManagedServiceIdentity"
                                                                },
                                                                "body":  {
                                                                    "properties":  {
                                                                        "accessPolicies":  [
                                                                            {
                                                                                "objectId":  "@items('For_each_Access_Policy_Item')?['objectId']",
                                                                                "tenantId":  "@items('For_each_Access_Policy_Item')?['tenantId']"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "method":  "PUT",
                                                                "uri":  "https://management.azure.com/subscriptions/@{variables('subscriptionID')}/resourceGroups/@{variables('resourceGroup')}/providers/Microsoft.KeyVault/vaults/@{items('For_each_Key_Vault_Item')?['name']}/accessPolicies/remove?api-version=2019-09-01"
                                                            }
                                                        },
                                                        "Set_variable":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "resourceGroup",
                                                                "value":  "@{substring(split(items('For_each_Key_Vault_Item')?['id'], '/resourceGroups/')[1], 0, indexOf(split(items('For_each_Key_Vault_Item')?['id'], '/resourceGroups/')[1], '/'))}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "equals":  [
                                                                    "@items('For_each_Access_Policy_Item')?['objectId']",
                                                                    "@variables('attackerID')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach"
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_from_HTTP_Key_Vaults_List_by_Sub":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_JSON_from_HTTP_Key_Vaults_List_by_Sub":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('HTTP_Key_Vaults_List_by_Sub')",
                                        "schema":  {
                                            "properties":  {
                                                "nextLink":  {
                                                    "type":  "string"
                                                },
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "location":  {
                                                                "type":  "string"
                                                            },
                                                            "name":  {
                                                                "type":  "string"
                                                            },
                                                            "properties":  {
                                                                "properties":  {
                                                                    "accessPolicies":  {
                                                                        "items":  {
                                                                            "properties":  {
                                                                                "objectId":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "permissions":  {
                                                                                    "properties":  {
                                                                                        "certificates":  {
                                                                                            "type":  "array"
                                                                                        },
                                                                                        "keys":  {
                                                                                            "items":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "type":  "array"
                                                                                        },
                                                                                        "secrets":  {
                                                                                            "items":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "type":  "array"
                                                                                        }
                                                                                    },
                                                                                    "type":  "object"
                                                                                },
                                                                                "tenantId":  {
                                                                                    "type":  "string"
                                                                                }
                                                                            },
                                                                            "required":  [
                                                                                "tenantId",
                                                                                "objectId",
                                                                                "permissions"
                                                                            ],
                                                                            "type":  "object"
                                                                        },
                                                                        "type":  "array"
                                                                    },
                                                                    "enableRbacAuthorization":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "enableSoftDelete":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "enabledForDeployment":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "enabledForDiskEncryption":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "enabledForTemplateDeployment":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "networkAcls":  {
                                                                        "properties":  {
                                                                            "bypass":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "defaultAction":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "ipRules":  {
                                                                                "type":  "array"
                                                                            },
                                                                            "virtualNetworkRules":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "id":  {
                                                                                            "type":  "string"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "id"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "provisioningState":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "sku":  {
                                                                        "properties":  {
                                                                            "family":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "name":  {
                                                                                "type":  "string"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "softDeleteRetentionInDays":  {
                                                                        "type":  "integer"
                                                                    },
                                                                    "tenantId":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "vaultUri":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "tags":  {
                                                                "properties":  {
                                                                    "costCenter":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "type":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "name",
                                                            "type",
                                                            "location",
                                                            "tags",
                                                            "properties"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "HTTP_Key_Vaults_List_by_Sub":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Terminate":  {
                                        "runAfter":  {
                                        },
                                        "type":  "Terminate",
                                        "inputs":  {
                                            "runError":  {
                                                "message":  "Error in Calling HTTP Key Vaults List"
                                            },
                                            "runStatus":  "Failed"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@outputs('HTTP_Key_Vaults_List_by_Sub')['statusCode']",
                                            200
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "For_each_Entity_from_Security_Alert":  {
                            "foreach":  "@triggerBody()?['Entities']",
                            "actions":  {
                                "Condition_Check_if_resourceID_Exists":  {
                                    "actions":  {
                                        "Set_variable_resourceID":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "resourceID",
                                                "value":  "@body('Parse_JSON_from_Entities')?['resourceId']"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_from_Entities":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "not":  {
                                                    "equals":  [
                                                        "@body('Parse_JSON_from_Entities')?['resourceId']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each_Role_Assignment":  {
                                    "foreach":  "@body('Parse_JSON_from_HTTP_Role_Assignments')?['value']",
                                    "actions":  {
                                        "Condition":  {
                                            "actions":  {
                                                "HTTP_Role_Assignment_Delete_by_ID":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "Http",
                                                    "inputs":  {
                                                        "authentication":  {
                                                            "type":  "ManagedServiceIdentity"
                                                        },
                                                        "method":  "DELETE",
                                                        "uri":  "https://management.azure.com/@{items('For_each_Role_Assignment')?['id']}?api-version=2015-07-01"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "equals":  [
                                                            "@items('For_each_Role_Assignment')?['properties']?['principalId']",
                                                            "@variables('attackerID')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_from_HTTP_Role_Assignments":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "HTTP_Role_Assignments_List":  {
                                    "runAfter":  {
                                        "Condition_Check_if_resourceID_Exists":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "type":  "ManagedServiceIdentity"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://management.azure.com/@{variables('resourceID')}/providers/Microsoft.Authorization/roleAssignments?api-version=2015-07-01"
                                    }
                                },
                                "Parse_JSON_from_Entities":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@items('For_each_Entity_from_Security_Alert')",
                                        "schema":  {
                                            "properties":  {
                                                "$id":  {
                                                    "type":  "string"
                                                },
                                                "address":  {
                                                    "type":  "string"
                                                },
                                                "location":  {
                                                    "properties":  {
                                                        "city":  {
                                                            "type":  "string"
                                                        },
                                                        "countryCode":  {
                                                            "type":  "string"
                                                        },
                                                        "countryName":  {
                                                            "type":  "string"
                                                        },
                                                        "state":  {
                                                            "type":  "string"
                                                        }
                                                    },
                                                    "type":  "object"
                                                },
                                                "resourceId":  {
                                                    "type":  "string"
                                                },
                                                "type":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_JSON_from_HTTP_Role_Assignments":  {
                                    "runAfter":  {
                                        "HTTP_Role_Assignments_List":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('HTTP_Role_Assignments_List')",
                                        "schema":  {
                                            "properties":  {
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "name":  {
                                                                "type":  "string"
                                                            },
                                                            "properties":  {
                                                                "properties":  {
                                                                    "createdBy":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "createdOn":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "principalId":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "roleDefinitionId":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "scope":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "updatedBy":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "updatedOn":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "type":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "properties",
                                                            "id",
                                                            "type",
                                                            "name"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_resourceID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "HTTP_Key_Vaults_List_by_Sub":  {
                            "runAfter":  {
                                "Initialize_variable_resourceID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "authentication":  {
                                    "audience":  "https://management.azure.com ",
                                    "type":  "ManagedServiceIdentity"
                                },
                                "method":  "GET",
                                "uri":  "https://management.azure.com/subscriptions/@{variables('subscriptionID')}/providers/Microsoft.KeyVault/vaults?api-version=2019-09-01"
                            }
                        },
                        "Initialize_variable_attackerID":  {
                            "runAfter":  {
                                "Parse_JSON_from_Security_Alert":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "attackerID",
                                        "type":  "string",
                                        "value":  "e20cd398-8130-4aa2-9c44-22de49b48557"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_resourceGroup":  {
                            "runAfter":  {
                                "Initialize_variable_subscriptionID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "resourceGroup",
                                        "type":  "string",
                                        "value":  "@{substring(split(triggerBody()?['AlertUri'], '/resourceGroup/')[1], 0, indexOf(split(triggerBody()?['AlertUri'], '/resourceGroup/')[1], '/'))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_resourceID":  {
                            "runAfter":  {
                                "Initialize_variable_attackerID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "resourceID",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_subscriptionID":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "subscriptionID",
                                        "type":  "string",
                                        "value":  "@{substring(split(triggerBody()?['AlertUri'], '/subscriptionId/')[1], 0, indexOf(split(triggerBody()?['AlertUri'], '/subscriptionId/')[1], '/'))}"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_from_Security_Alert":  {
                            "runAfter":  {
                                "Initialize_variable_resourceGroup":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()?['ExtendedProperties']",
                                "schema":  {
                                    "properties":  {
                                        "alert Reasons":  {
                                            "type":  "string"
                                        },
                                        "all vault operations in last 24 hours":  {
                                            "type":  "string"
                                        },
                                        "application ID":  {
                                            "type":  "string"
                                        },
                                        "attacker IP Address":  {
                                            "type":  "string"
                                        },
                                        "attacker Object ID":  {
                                            "type":  "string"
                                        },
                                        "client Information":  {
                                            "type":  "string"
                                        },
                                        "end Time UTC":  {
                                            "type":  "string"
                                        },
                                        "resourceType":  {
                                            "type":  "string"
                                        },
                                        "result Signature":  {
                                            "type":  "string"
                                        },
                                        "start Time UTC":  {
                                            "type":  "string"
                                        },
                                        "suspicious Operations":  {
                                            "type":  "string"
                                        },
                                        "target":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "ascalert":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AscalertConnectionName'))]",
                                "connectionName":  "[variables('AscalertConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Ascalert')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "costCenter":  "demo",
                "costPurpose":  "demo",
                "hidden-SentinelTemplateName":  "Remove-KeyVault-AccessPolicies-RBACPermissions",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AscalertConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AscalertConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AscalertConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Ascalert')]"
                }
            }
        }
    ]
}
