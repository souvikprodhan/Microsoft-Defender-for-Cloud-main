{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This Logic App for Workflow Automations will notify Microsoft Defender for Cloud generated threat alerts to recent users within last 14 days that created or updated the Azure Resource.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "LogicAppName": {
            "defaultValue": "Notify-ASCAlertsbyAzureActivity",
            "type": "String"
        },
        "SecurityOperationsEmail": {
            "defaultValue": "socemailaddress@company.com",
            "type": "String"
        }        
    },
    "variables": {
        "ascalertConnectionName": "[concat('ascalert-', parameters('LogicAppName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('LogicAppName'))]"        
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ascalertConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('LogicAppName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('LogicAppName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "SecurityOperationsEmail": {
                            "defaultValue": "[parameters('SecurityOperationsEmail')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Current_time": {
                            "runAfter": {
                                "Initialize_variable_ResourceURI": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "CurrentTime",
                            "inputs": {}
                        },
                        "Filter_array": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@contains(item(), 'azureID')"
                            },
                            "description": "Filter on Alert Entities for AzureID"
                        },
                        "For_each": {
                            "foreach": "@body('GetAudits')?['value']",
                            "actions": {
                                "Check_for_Unique_Email_Address": {
                                    "actions": {
                                        "Append_to_string_variable": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "activecalleremailaddress",
                                                "value": "@{items('For_each')?['caller']}; "
                                            },
                                            "description": "append the unique email address to string variable to be used in TO: of sending email"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each')?['caller']",
                                                    "@"
                                                ]
                                            },
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('activecalleremailaddress')",
                                                        "@items('For_each')?['caller']"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "Conditional check prevents same email address from being appended TO: email address string variable"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_activecalleremailaddress": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "description": "Running through the GetAudits body of audit events, check if email address is unique and append to a string variable to be used in To: to send an email",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "GetAudits": {
                            "runAfter": {
                                "Get_past_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/@{first(skip(split(variables('ResourceURI'),'/'),2))}/providers/microsoft.insights/eventtypes/management/values?%24filter=eventTimestamp%20ge%20'@{body('Get_past_time')}'%20and%20eventTimestamp%20le%20'@{body('Current_time')}'%20and%20resourceUri%20eq%20'@{variables('ResourceURI')}'&api-version=2015-04-01"
                            },
                            "description": "Use Azure Activity List API and get 14 days of audit events"
                        },
                        "Get_past_time": {
                            "runAfter": {
                                "Current_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "GetPastTime",
                            "inputs": {
                                "interval": 14,
                                "timeUnit": "Day"
                            },
                            "description": "14 day lookback for audit events"
                        },
                        "Initialize_variable_ResourceURI": {
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResourceURI",
                                        "type": "string",
                                        "value": "@{body('Filter_array')[0]?['azureID']}"
                                    }
                                ]
                            },
                            "description": "Azure Resource ID URI"
                        },
                        "Initialize_variable_activecalleremailaddress": {
                            "runAfter": {
                                "GetAudits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "activecalleremailaddress",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>Microsoft Defender for Cloud has discovered a potential security threat in your environment. Details below:<br>\n<br>\nAlert name: @{triggerBody()?['AlertDisplayName']}<br>\n<br>\nAttacked resource: @{triggerBody()?['CompromisedEntity']}<br>\n<br>\nAlert severity: @{triggerBody()?['Severity']}<br>\n<br>\nDetection time: @{triggerBody()?['TimeGenerated']}<br>\n<br>\nDescription: @{triggerBody()?['Description']}<br>\n<br>\nDetected by: @{triggerBody()?['VendorName']}<br>\n<br>\nAlert ID: @{triggerBody()?['SystemAlertId']}<br>\n<br>\nResource identifiers: @{json(string(triggerBody()?['ResourceIdentifiers']))}<br>\n<br>\nLink to view alert in Microsoft Defender for Cloud: @{triggerBody()?['AlertUri']}</p>",
                                    "Importance": "High",
                                    "Subject": "Microsoft Defender for Cloud has discovered a potential security threat in your environment",
                                    "To": "@{variables('activecalleremailaddress')} @{parameters('SecurityOperationsEmail')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "office365",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "ascalert": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                                "connectionName": "ascalert",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}